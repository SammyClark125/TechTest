name: CI/CD

on:
    push:
        branches:
            - main
            - develop
    pull_request:
        branches:
            - main
            - develop

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                test-project:
                    - ./UserManagement.Data.Tests/UserManagement.Data.Tests.csproj
                    - ./UserManagement.Services.Tests/UserManagement.Services.Tests.csproj
                    - ./UserManagement.Web.Tests/UserManagement.Web.Tests.csproj

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "9.0.x"

            - name: Cache NuGet packages
              uses: actions/cache@v4
              with:
                  path: ~/.nuget/packages
                  key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
                  restore-keys: |
                      ${{ runner.os }}-nuget-

            - name: Restore dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore --configuration Release

            - name: Run tests with coverage
              run: dotnet test ${{ matrix.test-project }} --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults

            - name: Set artifact-safe name
              run: echo "ARTIFACT_NAME=test-results-$(basename ${{ matrix.test-project }} .csproj)" >> $GITHUB_ENV

            - name: Upload test results
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ env.ARTIFACT_NAME }}
                  path: ./TestResults

    publish-and-deploy:
        runs-on: ubuntu-latest
        needs: build-and-test

        env:
            APP_NAME: techtest-app
            LOCATION: uksouth
            ENVIRONMENT: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}
            RESOURCE_GROUP: ${{ github.ref_name == 'main' && 'techtest-rg' || 'techtest-rg-dev' }}
            WEBAPP_NAME: ${{ github.ref_name == 'main' && 'techtest-app-prod' || 'techtest-app-dev' }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "9.0.x"

            - name: Restore
              run: dotnet restore

            - name: Build
              run: dotnet build --configuration Release --no-restore

            - name: Publish app
              run: dotnet publish ./UserManagement.Web/UserManagement.Web.csproj -c Release -o publish

            - name: Zip published files
              run: cd publish && zip -r ../publish.zip .

            - name: Login to Azure
              uses: azure/login@v1
              with:
                  creds: ${{ secrets.AZURE_CREDENTIALS }}

            - name: Deploy infrastructure via Bicep
              uses: azure/cli@v1
              with:
                  inlineScript: |
                      az group create \
                        --name $RESOURCE_GROUP \
                        --location $LOCATION

                      az deployment group create \
                        --name cd-iac-${{ github.run_number }} \
                        --resource-group $RESOURCE_GROUP \
                        --template-file infrastructure/main.bicep \
                        --parameters appName=$APP_NAME \
                                     environment=$ENVIRONMENT \
                                     location=$LOCATION

            - name: Deploy ZIP to Azure Web App
              run: |
                  az webapp deploy \
                    --resource-group $RESOURCE_GROUP \
                    --name $WEBAPP_NAME \
                    --src-path publish.zip \
                    --type zip
